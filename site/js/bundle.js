// Generated by psc-bundle 0.10.1
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  /* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
  "use strict";

  exports._setTimeout = function (nonCanceler, millis, aff) {
    var set = setTimeout;
    var clear = clearTimeout;
    if (millis <= 0 && typeof setImmediate === "function") {
      set = setImmediate;
      clear = clearImmediate;
    }
    return function (success, error) {
      var canceler;

      var timeout = set(function () {
        canceler = aff(success, error);
      }, millis);

      return function (e) {
        return function (s, f) {
          if (canceler !== undefined) {
            return canceler(e)(s, f);
          } else {
            clear(timeout);
            s(true);
            return nonCanceler;
          }
        };
      };
    };
  };

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  };

  exports._pure = function (nonCanceler, v) {
    return function (success) {
      success(v);
      return nonCanceler;
    };
  };

  exports._fmap = function (f, aff) {
    return function (success, error) {
      try {
        return aff(function (v) {
          try {
            var v2 = f(v);
          } catch (err) {
            error(err);
          }
          success(v2);
        }, error);
      } catch (err) {
        error(err);
      }
    };
  };

  exports._bind = function (alwaysCanceler, aff, f) {
    return function (success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function () {};

      canceler1 = aff(function (v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function (e) {
        return function (s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function (bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function (canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  };

  exports._runAff = function (errorT, successT, aff) {
    return function () {
      return aff(function (v) {
        successT(v)();
      }, function (e) {
        errorT(e)();
      });
    };
  };

  exports._liftEff = function (nonCanceler, e) {
    return function (success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.liftEff = liftEff;
  };                                                   
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
    "use strict";

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                         
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                    
  var eqInt = new Eq($foreign.refEq);    
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  };                                
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];        
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar33) {
                  return $dollar33;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 265, column 1 - line 265, column 21: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromJust"] = fromJust;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($169) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["sequence_"] = sequence_;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn2"] = $foreign.runFn2;
  exports["runFn3"] = $foreign.runFn3;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Data_Unit = PS["Data.Unit"];
  var Canceler = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });                                        
  var cancel = function (v) {
      return v;
  };
  var launchAff = (function () {
      var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($47) {
          return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($47)));
      });
      return function ($48) {
          return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($48)));
      };
  })();
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var later$prime = function (n) {
      return function (aff) {
          return $foreign._setTimeout(nonCanceler, n, aff);
      };
  };
  var later = later$prime(0);                                                
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  exports["Canceler"] = Canceler;
  exports["cancel"] = cancel;
  exports["later"] = later;
  exports["later'"] = later$prime;
  exports["launchAff"] = launchAff;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var unsafeCoerceAff = Unsafe_Coerce.unsafeCoerce;
  exports["unsafeCoerceAff"] = unsafeCoerceAff;
})(PS["Control.Monad.Aff.Unsafe"] = PS["Control.Monad.Aff.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.random = Math.random;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
          });
      };
      throw new Error("Failed pattern match at Data.Int line 65, column 1 - line 68, column 56: " + [ x.constructor.name ]);
  };
  var floor = function ($4) {
      return unsafeClamp($$Math.floor($4));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Int = PS["Data.Int"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var v = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($133) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($133));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var b = __copy_b;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return b;
                  };
                  if (v instanceof Cons) {
                      var __tco_b = f(b)(v.value0);
                      var __tco_v = v.value1;
                      b = __tco_b;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 67, column 3 - line 70, column 34: " + [ b.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          return function (as) {
              var rev = function (__copy_acc) {
                  return function (__copy_v) {
                      var acc = __copy_acc;
                      var v = __copy_v;
                      tco: while (true) {
                          if (v instanceof Nil) {
                              return acc;
                          };
                          if (v instanceof Cons) {
                              var __tco_acc = new Cons(v.value0, acc);
                              var __tco_v = v.value1;
                              acc = __tco_acc;
                              v = __tco_v;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 63, column 3 - line 66, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                      };
                  };
              };
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 352, column 1 - line 355, column 36: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["fromFoldable"] = fromFoldable;
  exports["length"] = length;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];        
  var tail = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar5) {
                  return $dollar5;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons) {
                  return v.value1;
              };
              throw new Error("Failed pattern match at Data.List.Partial line 16, column 1 - line 16, column 22: " + [ v.constructor.name ]);
          })());
      };
  };
  var head = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar17) {
                  return $dollar17;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_List_Types.Cons) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.List.Partial line 10, column 1 - line 10, column 20: " + [ v.constructor.name ]);
          })());
      };
  };
  exports["head"] = head;
  exports["tail"] = tail;
})(PS["Data.List.Partial"] = PS["Data.List.Partial"] || {});
(function(exports) {
    "use strict";

  // module Pux

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  function reactClass(htmlSignal) {
    return React.createClass({
      componentWillMount: function () {
        var ctx = this;
        htmlSignal.subscribe(function () {
          ctx.forceUpdate();
        });
      },
      render: function () {
        return htmlSignal.get()
      }
    });
  }

  exports.renderToDOM = function (selector) {
    var ReactDOM = (typeof require === 'function' && require('react-dom'))
                || (typeof window === 'object' && window.ReactDOM);
    return function (htmlSignal) {
      var elem = React.createElement(reactClass(htmlSignal));
      ReactDOM.render(elem, document.querySelector(selector))
      return function () {};
    };
  };

  exports.render = function (input, parentAction, html) {
    if (typeof html === 'string') {
      html = React.createElement('div', null, html);
    }

    function composeAction(parentAction, html) {
      var childAction = html.props && html.props.puxParentAction;
      var action = parentAction;
      if (childAction) {
        action = function (a) {
          return parentAction(childAction(a));
        };
      }
      return action;
    }

    function render(input, parentAction, html) {
      var props = html.props
      var newProps = {};

      for (var key in props) {
        if (key !== 'puxParentAction' && typeof props[key] === 'function') {
          newProps[key] = props[key](input, parentAction);
        }
      }

      var newChildren = React.Children.map(html.props.children, function (child) {
        if (typeof child === 'string') {
          return child;
        } else {
          return render(input, composeAction(parentAction, child), child);
        }
      });

      return React.cloneElement(html, newProps, newChildren);
    }

    return render(input, composeAction(parentAction, html), html);
  };
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {// module Signal

  function make(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  exports.constant = make;

  exports.mapSig = function(fun) {
    return function(sig) {
      var out = make(fun(sig.get()));
      sig.subscribe(function(val) { out.set(fun(val)); });
      return out;
    };
  };

  exports.merge = function(sig1) {
    return function(sig2) {
      var out = make(sig1.get());
      sig2.subscribe(out.set);
      sig1.subscribe(out.set);
      return out;
    };
  };

  exports.foldp = function(fun) {
    return function(seed) {
      return function(sig) {
        var acc = seed;
        var out = make(acc);
        sig.subscribe(function(val) {
          acc = fun(val)(acc);
          out.set(acc);
        });
        return out;
      };
    };
  };

  exports.runSignal =
    function runSignal(sig) {
      return function() {
        sig.subscribe(function(val) {
          val();
        });
        return {};
      };
    };
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Signal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Monoid = PS["Data.Monoid"];                               
  var mergeMany = function (dictFunctor) {
      return function (dictFoldable) {
          return function (sigs) {
              var mergeMaybe = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return v;
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return v1;
                      };
                      if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                      };
                      throw new Error("Failed pattern match at Signal line 52, column 9 - line 52, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
          };
      };
  };
  var functorSignal = new Data_Functor.Functor($foreign.mapSig);
  var flippedMap = function (dictFunctor) {
      return Data_Function.flip(Data_Functor.map(dictFunctor));
  };
  exports["flippedMap"] = flippedMap;
  exports["mergeMany"] = mergeMany;
  exports["functorSignal"] = functorSignal;
  exports["constant"] = $foreign.constant;
  exports["foldp"] = $foreign.foldp;
  exports["runSignal"] = $foreign.runSignal;
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {// module Signal.Channel

  exports.channelP =
    function channelP(constant) {
      return function(v) {
        return function() {
          return constant(v);
        };
      };
    };

  exports.sendP =
    function sendP(chan) {
      return function(v) {
        return function() {
          chan.set(v);
        };
      };
    };

  exports.subscribe =
    function subscribe(chan) {
      return chan;
    };
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Signal.Channel"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];        
  var send = $foreign.sendP;
  var channel = $foreign.channelP(Signal.constant);
  exports["channel"] = channel;
  exports["send"] = send;
  exports["subscribe"] = $foreign.subscribe;
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Pux"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Unsafe = PS["Control.Monad.Aff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var React = PS["React"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var Control_Bind = PS["Control.Bind"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];        
  var onlyEffects = function (state) {
      return function (effects) {
          return {
              state: state, 
              effects: effects
          };
      };
  };
  var noEffects = function (state) {
      return {
          state: state, 
          effects: [  ]
      };
  };
  var start = function (config) {
      return function __do() {
          var v = Signal_Channel.channel(Data_List_Types.Nil.value)();
          var mapAffect = function (affect) {
              return Control_Monad_Aff.launchAff(Control_Monad_Aff_Unsafe.unsafeCoerceAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.later(affect))(function (v1) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Signal_Channel.send(v)(Data_List.singleton(v1)));
              })));
          };
          var foldState = function (effModel) {
              return function (action) {
                  return config.update(action)(effModel.state);
              };
          };
          var foldActions = function (actions) {
              return function (effModel) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(foldState)(noEffects(effModel.state))(actions);
              };
          };
          var actionSignal = Signal_Channel.subscribe(v);
          var input = Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(Signal.mergeMany(Data_List_Types.functorList)(Data_List_Types.foldableList)(Data_List.reverse(new Data_List_Types.Cons(actionSignal, Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(Signal.functorSignal)(Data_List.singleton))(Data_List.fromFoldable(Data_Foldable.foldableArray)(config.inputs))))));
          });
          var effModelSignal = Signal.foldp(foldActions)(noEffects(config.initialState))(input);
          var effectsSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function ($7) {
              return Data_Functor.map(Data_Functor.functorArray)(mapAffect)((function (v1) {
                  return v1.effects;
              })($7));
          });
          var stateSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function (v1) {
              return v1.state;
          });
          var htmlSignal = Signal.flippedMap(Signal.functorSignal)(stateSignal)(function (state) {
              return $foreign.render(function ($8) {
                  return Signal_Channel.send(v)(Data_List.singleton($8));
              }, function (a) {
                  return a;
              }, config.view(state));
          });
          Signal.runSignal(Signal.flippedMap(Signal.functorSignal)(effectsSignal)(Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)))();
          return {
              html: htmlSignal, 
              state: stateSignal, 
              actionChannel: v
          };
      };
  };
  exports["noEffects"] = noEffects;
  exports["onlyEffects"] = onlyEffects;
  exports["start"] = start;
  exports["renderToDOM"] = $foreign.renderToDOM;
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {
    "use strict";

  exports["playSound'"] = function playSound(str) {
    return function() {
      document.getElementById(str + "-audio").play();
      return {};
    }
  }
})(PS["Simon"] = PS["Simon"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Attributes

  exports.attr = function (key) {
    return function (val) {
      if (key === 'dangerouslySetInnerHTML') {
        val = { __html: val };
      } else if (key === 'style') {
        val = val.reduce(function (obj, tuple) {
          obj[tuple.value0] = tuple.value1;
          return obj;
        }, {});
      }
      return [key, val];
    };
  };
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Pux.Html.Attributes"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var src = $foreign.attr("src");                
  var id_ = $foreign.attr("id");   
  var className = $foreign.attr("className");
  exports["className"] = className;
  exports["id_"] = id_;
  exports["src"] = src;
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Events

  exports.handler = function (key, action) {
    return [key, function (input, parentAction) {
      return function (ev) {
        if ((key === 'onSubmit')
        || (key === 'onClick' && ev.currentTarget.nodeName.toLowerCase() === 'a')) {
          ev.preventDefault();
        }
        input(parentAction(action(ev)))();
      };
    }];
  };
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Pux.Html.Events"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Pux_Html = PS["Pux.Html"];                                                              
  var onClick = Data_Function_Uncurried.runFn2($foreign.handler)("onClick");
  exports["onClick"] = onClick;
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Elements

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  exports.text = function (text) {
    return text;
  };

  exports.element = function (tagName, attrs, children) {
    if (Array.isArray(children[0])) children = children[0];

    var props = attrs.reduce(function (obj, attr) {
      var key = attr[0];
      var val = attr[1];
      obj[key] = val;
      return obj;
    }, {});

    return React.createElement.apply(React, [tagName, props].concat(children));
  };
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Pux.Html.Elements"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];                              
  var span = Data_Function_Uncurried.runFn3($foreign.element)("span");
  var div = Data_Function_Uncurried.runFn3($foreign.element)("div");      
  var br = Data_Function_Uncurried.runFn3($foreign.element)("br");
  var audio = Data_Function_Uncurried.runFn3($foreign.element)("audio");
  exports["audio"] = audio;
  exports["br"] = br;
  exports["div"] = div;
  exports["span"] = span;
  exports["text"] = $foreign.text;
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Simon"];
  var Prelude = PS["Prelude"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Maybe = PS["Data.Maybe"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];
  var Pux_Html_Events = PS["Pux.Html.Events"];
  var Data_List = PS["Data.List"];
  var Data_List_Partial = PS["Data.List.Partial"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var Green = (function () {
      function Green() {

      };
      Green.value = new Green();
      return Green;
  })();
  var Blue = (function () {
      function Blue() {

      };
      Blue.value = new Blue();
      return Blue;
  })();
  var Yellow = (function () {
      function Yellow() {

      };
      Yellow.value = new Yellow();
      return Yellow;
  })();
  var Start = (function () {
      function Start() {

      };
      Start.value = new Start();
      return Start;
  })();
  var Stop = (function () {
      function Stop() {

      };
      Stop.value = new Stop();
      return Stop;
  })();
  var Win = (function () {
      function Win() {

      };
      Win.value = new Win();
      return Win;
  })();
  var Play = (function () {
      function Play(value0) {
          this.value0 = value0;
      };
      Play.create = function (value0) {
          return new Play(value0);
      };
      return Play;
  })();
  var AddColor = (function () {
      function AddColor(value0) {
          this.value0 = value0;
      };
      AddColor.create = function (value0) {
          return new AddColor(value0);
      };
      return AddColor;
  })();
  var PlayerTurn = (function () {
      function PlayerTurn() {

      };
      PlayerTurn.value = new PlayerTurn();
      return PlayerTurn;
  })();
  var ComputerTurn = (function () {
      function ComputerTurn() {

      };
      ComputerTurn.value = new ComputerTurn();
      return ComputerTurn;
  })();
  var NextStage = (function () {
      function NextStage() {

      };
      NextStage.value = new NextStage();
      return NextStage;
  })();
  var Lose = (function () {
      function Lose() {

      };
      Lose.value = new Lose();
      return Lose;
  })();
  var ActivateButton = (function () {
      function ActivateButton(value0) {
          this.value0 = value0;
      };
      ActivateButton.create = function (value0) {
          return new ActivateButton(value0);
      };
      return ActivateButton;
  })();
  var DeactivateButton = (function () {
      function DeactivateButton() {

      };
      DeactivateButton.value = new DeactivateButton();
      return DeactivateButton;
  })();
  var ReplayList = (function () {
      function ReplayList(value0) {
          this.value0 = value0;
      };
      ReplayList.create = function (value0) {
          return new ReplayList(value0);
      };
      return ReplayList;
  })();
  var ReplayChallenge = (function () {
      function ReplayChallenge() {

      };
      ReplayChallenge.value = new ReplayChallenge();
      return ReplayChallenge;
  })();
  var GenerateColor = (function () {
      function GenerateColor() {

      };
      GenerateColor.value = new GenerateColor();
      return GenerateColor;
  })();
  var Restart = (function () {
      function Restart() {

      };
      Restart.value = new Restart();
      return Restart;
  })();
  var ToggleHard = (function () {
      function ToggleHard() {

      };
      ToggleHard.value = new ToggleHard();
      return ToggleHard;
  })();
  var showColor = new Data_Show.Show(function (v) {
      if (v instanceof Red) {
          return "red";
      };
      if (v instanceof Green) {
          return "green";
      };
      if (v instanceof Blue) {
          return "blue";
      };
      if (v instanceof Yellow) {
          return "yellow";
      };
      throw new Error("Failed pattern match at Simon line 24, column 3 - line 25, column 3: " + [ v.constructor.name ]);
  });
  var soundsHtml = function (color) {
      return Pux_Html_Elements.audio([ Pux_Html_Attributes.id_(Data_Show.show(showColor)(color) + "-audio"), Pux_Html_Attributes.src("snd/" + (Data_Show.show(showColor)(color) + ".mp3")) ])([  ]);
  };
  var playSound = function ($78) {
      return $foreign["playSound'"](Data_Show.show(showColor)($78));
  };
  var initial = {
      challenge: Data_List_Types.Nil.value, 
      todo: Data_List_Types.Nil.value, 
      hard: false, 
      playing: false, 
      activeColor: Data_Maybe.Nothing.value, 
      stage: 1, 
      lost: false, 
      started: false, 
      won: false
  };
  var getRandomColor = function __do() {
      var v = Control_Monad_Eff_Random.randomInt(1)(4)();
      if (v === 1) {
          return Red.value;
      };
      if (v === 2) {
          return Blue.value;
      };
      if (v === 3) {
          return Green.value;
      };
      return Yellow.value;
  };
  var eqColor = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof Red && v1 instanceof Red) {
              return true;
          };
          if (v instanceof Green && v1 instanceof Green) {
              return true;
          };
          if (v instanceof Blue && v1 instanceof Blue) {
              return true;
          };
          if (v instanceof Yellow && v1 instanceof Yellow) {
              return true;
          };
          return false;
      };
  });
  var update = function (v) {
      return function (state) {
          if (v instanceof Start) {
              return {
                  state: (function () {
                      var $15 = {};
                      for (var $16 in state) {
                          if (state.hasOwnProperty($16)) {
                              $15[$16] = state[$16];
                          };
                      };
                      $15.started = true;
                      return $15;
                  })(), 
                  effects: [ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ComputerTurn.value) ]
              };
          };
          if (v instanceof Stop) {
              return Pux.noEffects((function () {
                  var $18 = {};
                  for (var $19 in initial) {
                      if (initial.hasOwnProperty($19)) {
                          $18[$19] = initial[$19];
                      };
                  };
                  $18.started = false;
                  return $18;
              })());
          };
          if (v instanceof Play) {
              var $21 = Data_Eq.eq(eqColor)(v.value0)(Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Data_List_Partial.head(dictPartial)(state.todo);
              }));
              if ($21) {
                  return {
                      state: (function () {
                          var $22 = {};
                          for (var $23 in state) {
                              if (state.hasOwnProperty($23)) {
                                  $22[$23] = state[$23];
                              };
                          };
                          $22.todo = Partial_Unsafe.unsafePartial(function (dictPartial) {
                              return Data_List_Partial.tail(dictPartial)(state.todo);
                          });
                          return $22;
                      })(), 
                      effects: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new ActivateButton(v.value0)) ])((function () {
                          var $25 = Data_List.length(state.todo) > 1;
                          if ($25) {
                              return [  ];
                          };
                          if (!$25) {
                              return [ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(NextStage.value) ];
                          };
                          throw new Error("Failed pattern match at Simon line 80, column 18 - line 83, column 41: " + [ $25.constructor.name ]);
                      })())
                  };
              };
              if (!$21) {
                  return Pux.onlyEffects(state)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new ActivateButton(v.value0)), Control_Monad_Aff["later'"](600)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Lose.value)) ]);
              };
              throw new Error("Failed pattern match at Simon line 78, column 5 - line 84, column 81: " + [ $21.constructor.name ]);
          };
          if (v instanceof NextStage) {
              var $27 = Data_List.length(state.challenge) < 10;
              if ($27) {
                  return {
                      state: (function () {
                          var $28 = {};
                          for (var $29 in state) {
                              if (state.hasOwnProperty($29)) {
                                  $28[$29] = state[$29];
                              };
                          };
                          $28.playing = false;
                          $28.stage = state.stage + 1 | 0;
                          return $28;
                      })(), 
                      effects: [ Control_Monad_Aff["later'"](1000)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ComputerTurn.value)) ]
                  };
              };
              if (!$27) {
                  return Pux.onlyEffects(state)([ Control_Monad_Aff["later'"](600)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Win.value)) ]);
              };
              throw new Error("Failed pattern match at Simon line 86, column 3 - line 90, column 46: " + [ $27.constructor.name ]);
          };
          if (v instanceof ComputerTurn) {
              return Pux.onlyEffects(state)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(GenerateColor.value) ]);
          };
          if (v instanceof GenerateColor) {
              return Pux.onlyEffects(state)([ Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(getRandomColor))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new AddColor(v1));
              }) ]);
          };
          if (v instanceof ReplayChallenge) {
              return Pux.onlyEffects(state)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ReplayList.create(Data_List.reverse(state.challenge))) ]);
          };
          if (v instanceof ReplayList && v.value0 instanceof Data_List_Types.Nil) {
              return Pux.onlyEffects(state)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(PlayerTurn.value) ]);
          };
          if (v instanceof ReplayList && v.value0 instanceof Data_List_Types.Cons) {
              return Pux.onlyEffects(state)([ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new ActivateButton(v.value0.value0)), Control_Monad_Aff["later'"](1000)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new ReplayList(v.value0.value1))) ]);
          };
          if (v instanceof AddColor) {
              return {
                  state: (function () {
                      var $36 = {};
                      for (var $37 in state) {
                          if (state.hasOwnProperty($37)) {
                              $36[$37] = state[$37];
                          };
                      };
                      $36.challenge = new Data_List_Types.Cons(v.value0, state.challenge);
                      return $36;
                  })(), 
                  effects: [ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ReplayChallenge.value) ]
              };
          };
          if (v instanceof PlayerTurn) {
              return Pux.noEffects((function () {
                  var $40 = {};
                  for (var $41 in state) {
                      if (state.hasOwnProperty($41)) {
                          $40[$41] = state[$41];
                      };
                  };
                  $40.playing = true;
                  $40.todo = Data_List.reverse(state.challenge);
                  return $40;
              })());
          };
          if (v instanceof ActivateButton) {
              return {
                  state: (function () {
                      var $43 = {};
                      for (var $44 in state) {
                          if (state.hasOwnProperty($44)) {
                              $43[$44] = state[$44];
                          };
                      };
                      $43.activeColor = new Data_Maybe.Just(v.value0);
                      return $43;
                  })(), 
                  effects: [ Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff["later'"](100)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(playSound(v.value0))))(function () {
                      return Control_Monad_Aff["later'"](300)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(DeactivateButton.value));
                  }) ]
              };
          };
          if (v instanceof DeactivateButton) {
              return Pux.noEffects((function () {
                  var $47 = {};
                  for (var $48 in state) {
                      if (state.hasOwnProperty($48)) {
                          $47[$48] = state[$48];
                      };
                  };
                  $47.activeColor = Data_Maybe.Nothing.value;
                  return $47;
              })());
          };
          if (v instanceof Lose) {
              return {
                  state: (function () {
                      var $50 = {};
                      for (var $51 in state) {
                          if (state.hasOwnProperty($51)) {
                              $50[$51] = state[$51];
                          };
                      };
                      $50.lost = true;
                      return $50;
                  })(), 
                  effects: [ Control_Monad_Aff["later'"](1000)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Restart.value)) ]
              };
          };
          if (v instanceof Restart) {
              var $53 = !state.hard;
              if ($53) {
                  return {
                      state: (function () {
                          var $54 = {};
                          for (var $55 in state) {
                              if (state.hasOwnProperty($55)) {
                                  $54[$55] = state[$55];
                              };
                          };
                          $54.lost = false;
                          return $54;
                      })(), 
                      effects: [ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ReplayList.create(Data_List.reverse(state.challenge))) ]
                  };
              };
              if (!$53) {
                  return {
                      state: (function () {
                          var $57 = {};
                          for (var $58 in initial) {
                              if (initial.hasOwnProperty($58)) {
                                  $57[$58] = initial[$58];
                              };
                          };
                          $57.hard = state.hard;
                          $57.started = true;
                          return $57;
                      })(), 
                      effects: [ Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(ComputerTurn.value) ]
                  };
              };
              throw new Error("Failed pattern match at Simon line 124, column 3 - line 129, column 35: " + [ $53.constructor.name ]);
          };
          if (v instanceof ToggleHard) {
              return Pux.noEffects((function () {
                  var $60 = {};
                  for (var $61 in state) {
                      if (state.hasOwnProperty($61)) {
                          $60[$61] = state[$61];
                      };
                  };
                  $60.hard = !state.hard;
                  return $60;
              })());
          };
          if (v instanceof Win) {
              return {
                  state: (function () {
                      var $63 = {};
                      for (var $64 in state) {
                          if (state.hasOwnProperty($64)) {
                              $63[$64] = state[$64];
                          };
                      };
                      $63.won = true;
                      return $63;
                  })(), 
                  effects: [ Control_Monad_Aff["later'"](3000)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Stop.value)) ]
              };
          };
          throw new Error("Failed pattern match at Simon line 72, column 1 - line 74, column 35: " + [ v.constructor.name, state.constructor.name ]);
      };
  };
  var controlsHtml = function (state) {
      return Pux_Html_Elements.div([ Pux_Html_Attributes.className("controls-box") ])([ Pux_Html_Elements.div([ Pux_Html_Attributes.className("controls") ])([ Pux_Html_Elements.div([ Pux_Html_Attributes.className("mode") ])([ Pux_Html_Elements.span(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pux_Html_Attributes.className("easy" + (function () {
          if (state.hard) {
              return " clickable";
          };
          if (!state.hard) {
              return "";
          };
          throw new Error("Failed pattern match at Simon line 179, column 16 - line 179, column 77: " + [ state.hard.constructor.name ]);
      })()) ])((function () {
          if (state.hard) {
              return [ Pux_Html_Events.onClick(Data_Function["const"](ToggleHard.value)) ];
          };
          if (!state.hard) {
              return [  ];
          };
          throw new Error("Failed pattern match at Simon line 179, column 15 - line 180, column 71: " + [ state.hard.constructor.name ]);
      })()))([ Pux_Html_Elements.text("Easy") ]), Pux_Html_Elements.span(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pux_Html_Attributes.className("hard" + (function () {
          if (state.hard) {
              return "";
          };
          if (!state.hard) {
              return " clickable";
          };
          throw new Error("Failed pattern match at Simon line 182, column 16 - line 182, column 78: " + [ state.hard.constructor.name ]);
      })()) ])((function () {
          var $69 = !state.hard;
          if ($69) {
              return [ Pux_Html_Events.onClick(Data_Function["const"](ToggleHard.value)) ];
          };
          if (!$69) {
              return [  ];
          };
          throw new Error("Failed pattern match at Simon line 182, column 15 - line 183, column 75: " + [ $69.constructor.name ]);
      })()))([ Pux_Html_Elements.text("Hard") ]), Pux_Html_Elements.div([ Pux_Html_Attributes.className("mode-background" + (function () {
          if (state.hard) {
              return " offset";
          };
          if (!state.hard) {
              return "";
          };
          throw new Error("Failed pattern match at Simon line 185, column 14 - line 185, column 83: " + [ state.hard.constructor.name ]);
      })()) ])([  ]) ]), Pux_Html_Elements.div([ Pux_Html_Attributes.className("stage") ])([ Pux_Html_Elements.text("Stage: ") ]), Pux_Html_Elements.br([  ])([  ]), Pux_Html_Elements.div([ Pux_Html_Attributes.className("stage") ])([ Pux_Html_Elements.text(Data_Show.show(Data_Show.showInt)(state.stage)) ]), Pux_Html_Elements.div(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pux_Html_Attributes.className("start") ])((function () {
          if (state.started) {
              return [ Pux_Html_Events.onClick(Data_Function["const"](Stop.value)) ];
          };
          if (!state.started) {
              return [ Pux_Html_Events.onClick(Data_Function["const"](Start.value)) ];
          };
          throw new Error("Failed pattern match at Simon line 190, column 12 - line 191, column 79: " + [ state.started.constructor.name ]);
      })()))([ Pux_Html_Elements.text((function () {
          if (state.started) {
              return "Stop";
          };
          if (!state.started) {
              return "Start";
          };
          throw new Error("Failed pattern match at Simon line 192, column 12 - line 192, column 58: " + [ state.started.constructor.name ]);
      })()) ]) ]) ]);
  };
  var buttonAttributes = function (state) {
      return function (color) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pux_Html_Attributes.className("button " + (Data_Show.show(showColor)(color) + ((function () {
              if (state.playing) {
                  return " playing";
              };
              if (!state.playing) {
                  return "";
              };
              throw new Error("Failed pattern match at Simon line 168, column 16 - line 168, column 56: " + [ state.playing.constructor.name ]);
          })() + (function () {
              var $74 = Data_Eq.eq(Data_Maybe.eqMaybe(eqColor))(state.activeColor)(new Data_Maybe.Just(color));
              if ($74) {
                  return " active";
              };
              if (!$74) {
                  return "" + (function () {
                      if (state.won) {
                          return " won";
                      };
                      if (!state.won) {
                          return "" + (function () {
                              if (state.lost) {
                                  return " lost";
                              };
                              if (!state.lost) {
                                  return "";
                              };
                              throw new Error("Failed pattern match at Simon line 170, column 45 - line 171, column 50: " + [ state.lost.constructor.name ]);
                          })();
                      };
                      throw new Error("Failed pattern match at Simon line 169, column 72 - line 171, column 50: " + [ state.won.constructor.name ]);
                  })();
              };
              throw new Error("Failed pattern match at Simon line 167, column 4 - line 171, column 50: " + [ $74.constructor.name ]);
          })()))) ])((function () {
              if (state.playing) {
                  return [ Pux_Html_Events.onClick(Data_Function["const"](new Play(color))) ];
              };
              if (!state.playing) {
                  return [  ];
              };
              throw new Error("Failed pattern match at Simon line 167, column 3 - line 172, column 63: " + [ state.playing.constructor.name ]);
          })());
      };
  };
  var gameHtml = function (state) {
      return Pux_Html_Elements.div([ Pux_Html_Attributes.className("game") ])([ Pux_Html_Elements.div(buttonAttributes(state)(Red.value))([ Pux_Html_Elements.div([  ])([  ]) ]), Pux_Html_Elements.div(buttonAttributes(state)(Green.value))([ Pux_Html_Elements.div([  ])([  ]) ]), Pux_Html_Elements.div(buttonAttributes(state)(Blue.value))([ Pux_Html_Elements.div([  ])([  ]) ]), Pux_Html_Elements.div(buttonAttributes(state)(Yellow.value))([ Pux_Html_Elements.div([  ])([  ]) ]), controlsHtml(state), soundsHtml(Red.value), soundsHtml(Green.value), soundsHtml(Blue.value), soundsHtml(Yellow.value) ]);
  };
  var view = function (state) {
      return gameHtml(state);
  };
  exports["Start"] = Start;
  exports["Stop"] = Stop;
  exports["Win"] = Win;
  exports["Play"] = Play;
  exports["AddColor"] = AddColor;
  exports["PlayerTurn"] = PlayerTurn;
  exports["ComputerTurn"] = ComputerTurn;
  exports["NextStage"] = NextStage;
  exports["Lose"] = Lose;
  exports["ActivateButton"] = ActivateButton;
  exports["DeactivateButton"] = DeactivateButton;
  exports["ReplayList"] = ReplayList;
  exports["ReplayChallenge"] = ReplayChallenge;
  exports["GenerateColor"] = GenerateColor;
  exports["Restart"] = Restart;
  exports["ToggleHard"] = ToggleHard;
  exports["Red"] = Red;
  exports["Green"] = Green;
  exports["Blue"] = Blue;
  exports["Yellow"] = Yellow;
  exports["buttonAttributes"] = buttonAttributes;
  exports["controlsHtml"] = controlsHtml;
  exports["gameHtml"] = gameHtml;
  exports["getRandomColor"] = getRandomColor;
  exports["initial"] = initial;
  exports["playSound"] = playSound;
  exports["soundsHtml"] = soundsHtml;
  exports["update"] = update;
  exports["view"] = view;
  exports["showColor"] = showColor;
  exports["eqColor"] = eqColor;
})(PS["Simon"] = PS["Simon"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Pux = PS["Pux"];
  var Simon = PS["Simon"];
  var Control_Bind = PS["Control.Bind"];        
  var main = function __do() {
      Control_Monad_Eff_Console.log("Simon!")();
      var v = Pux.start({
          initialState: Simon.initial, 
          update: Simon.update, 
          view: Simon.view, 
          inputs: [  ]
      })();
      return Pux.renderToDOM("#app")(v.html)();
  };
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
